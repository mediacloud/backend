version: "3.7"

services:

    topics-mine:
        image: mc2021/topics-mine:latest
        init: true
        stop_signal: SIGKILL
        environment:
            MC_TWITTER_CONSUMER_KEY: "${MC_TWITTER_CONSUMER_KEY}"
            MC_TWITTER_CONSUMER_SECRET: "${MC_TWITTER_CONSUMER_SECRET}"
            MC_TWITTER_ACCESS_TOKEN: "${MC_TWITTER_ACCESS_TOKEN}"
            MC_TWITTER_ACCESS_TOKEN_SECRET: "${MC_TWITTER_ACCESS_TOKEN_SECRET}"
            MC_BRANDWATCH_USER: "${MC_BRANDWATCH_USER}"
            MC_BRANDWATCH_PASSWORD: "${MC_BRANDWATCH_PASSWORD}"
        expose:
            # test_tm_mine.t's test HTTP servers:
            - 8890
            - 8891
            - 8892
            - 8893
            - 8894
            - 8895
        volumes:
            - type: bind
              source: ./bin/
              target: /opt/mediacloud/bin/
            - type: bind
              source: ./src/
              target: /opt/mediacloud/src/topics-mine/
            - type: bind
              source: ./tests/
              target: /opt/mediacloud/tests/
            - type: bind
              source: ./../topics-base/src/
              target: /opt/mediacloud/src/topics-base/
            - type: bind
              source: ./../common/src/
              target: /opt/mediacloud/src/common/
        depends_on:
            - postgresql-pgbouncer
            - rabbitmq-server
            - topics-fetch-link
            - topics-extract-story-links
            # 1) test_topics_mine.t calls topics-fetch-link
            # 2) topics-fetch-link calls _try_fetch_topic_url()
            # 3) _try_fetch_topic_url() calls generate_story()
            # 4) generate_story() calls _extract_story()
            # 5) _extract_story() runs a remote extraction job
            - extract-and-vector

    extract-and-vector:
        image: mc2021/extract-and-vector:latest
        init: true
        stop_signal: SIGKILL
        volumes:
            - type: bind
              source: ./../extract-and-vector/bin/
              target: /opt/mediacloud/bin/
            - type: bind
              source: ./../extract-and-vector/src/
              target: /opt/mediacloud/src/extract-and-vector/
            - type: bind
              source: ./../common/src/
              target: /opt/mediacloud/src/common/
        depends_on:
            - postgresql-pgbouncer
            - extract-article-from-page

    extract-article-from-page:
        image: mc2021/extract-article-from-page:latest
        init: true
        stop_signal: SIGKILL
        expose:
            - 8080
        volumes:
            - type: bind
              source: ./../extract-article-from-page/bin/
              target: /opt/mediacloud/bin/
            - type: bind
              source: ./../extract-article-from-page/src/
              target: /opt/mediacloud/src/extract-article-from-page/
            - type: bind
              source: ./../common/src/
              target: /opt/mediacloud/src/common/

    postgresql-pgbouncer:
        image: mc2021/postgresql-pgbouncer:latest
        init: true
        stop_signal: SIGKILL
        expose:
            - 6432
        volumes:
            - type: bind
              source: ./../postgresql-pgbouncer/conf/
              target: /etc/pgbouncer/
        depends_on:
            - postgresql-server

    postgresql-server:
        image: mc2021/postgresql-server:latest
        init: true
        stop_signal: SIGKILL
        expose:
            - 5432
        volumes:
            - type: bind
              source: ./../postgresql-server/bin/
              target: /opt/mediacloud/bin/
            - type: bind
              source: ./../postgresql-server/pgmigrate/
              target: /opt/postgresql-server/pgmigrate/
            - type: bind
              source: ./../postgresql-base/etc/postgresql/
              target: /etc/postgresql/

    rabbitmq-server:
        image: mc2021/rabbitmq-server:latest
        init: true
        stop_signal: SIGKILL
        expose:
            - 5672
            - 15672
        volumes:
            - type: bind
              source: ./../rabbitmq-server/conf/
              target: /etc/rabbitmq/

    topics-fetch-link:
        image: mc2021/topics-fetch-link:latest
        init: true
        stop_signal: SIGKILL
        volumes:
            - type: bind
              source: ./../topics-fetch-link/bin/
              target: /opt/mediacloud/bin/
            - type: bind
              source: ./../topics-fetch-link/src/
              target: /opt/mediacloud/src/topics-fetch-link/
            - type: bind
              source: ./../topics-base/src/
              target: /opt/mediacloud/src/topics-base/
            - type: bind
              source: ./../common/src/
              target: /opt/mediacloud/src/common/
        depends_on:
            - postgresql-pgbouncer
            # 1) test_fetch_link_job_update_state() calls fetch_topic_url_update_state()
            # 2) fetch_topic_url_update_state() calls generate_story()
            # 3) generate_story() calls _extract_story()
            # 4) _extract_story() runs a remote extraction job
            - extract-and-vector
            - rabbitmq-server

    topics-extract-story-links:
        image: mc2021/topics-extract-story-links:latest
        init: true
        stop_signal: SIGKILL
        volumes:
            - type: bind
              source: ./../topics-extract-story-links/bin/
              target: /opt/mediacloud/bin/
            - type: bind
              source: ./../topics-extract-story-links/src/
              target: /opt/mediacloud/src/topics-extract-story-links/
            - type: bind
              source: ./../topics-base/src/
              target: /opt/mediacloud/src/topics-base/
            - type: bind
              source: ./../common/src/
              target: /opt/mediacloud/src/common/
        depends_on:
            - postgresql-pgbouncer
            # Uses extractor HTTP service directly to get raw extracted HTML:
            - extract-article-from-page
